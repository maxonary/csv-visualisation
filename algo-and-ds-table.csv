Algorithm/Data Structure;Date of Conceptualisation ;Time Complexity;Space Complexity;Main Use-Case;Benefits and Key Features;Contributing Computing Innovation;Example for Software, Computers, Components
Queues;1837 (Analytical Engine);Access O(n), Insertion/Deletion O(1);O(n);Managing objects in order;Load management, FIFO;Development of programming languages;Assembly language
Arrays;1941;Access O(1), Insertion/Deletion O(n);O(n);Storing sequences of elements;Simple, efficient access;Invention of programming languages;FORTRAN language, Zuse Z2
Linked Lists;1955 (Newell, Shaw, Simon);Access O(n), Insertion/Deletion O(1);O(n);Dynamic data storage;Flexible, dynamic storage insertion/deletion;Early software development;Lisp language
Stacks;1955-1957;Access, Insertion/Deletion O(1);O(n);Managing objects in order;Load management, LIFO ;Memory management in early computers;"""Call Stack"" in computer programming"
Linear Search;1837 (Analytical Engine);"Best case O(1), 
Worst case
O(n)";O(1);Search in list or array;Simple, doesn't require sorted data, sequential, efficient for small data;Early digital computers;Punchcards, magnet band storage
Binary Search;Late 1940s;"Best case O(1), 
Worst case
O(log n)";O(1);Searching in sorted array;Efficient, logarithmic complexity;Development of algorithm theory;Early mainframe computers
Insertion Sort;1945 (Zuse);"Best case O(n),
Worst case O(n_)";O(1);Small datasets sorting;Efficient for small/nearly sorted data;Early digital computers;IBM 701
Merge Sort;1945 (von Neumann);"O(n log n)
";O(n);Sorting large datasets;Stable, efficient for large data;Advancements in database technology;Oracle Database
Selection Sort;1950s;O(n_);O(1);Small datasets sorting;Simple, memory efficient, minimal swaps;Early digital computers;C Standard Library
Bubble Sort;Late 1950s;"Best case O(n),
Worst case O(n_)";O(1);Educational purposes, sorting in multiple runs;Simple, easy to understand;Early computer science education;Teaching in BASIC language
Quick Sort;1960 (Hoare);"Best case O(n log n),
Worst case O(n_)";O(n);General-purpose sorting;Fast, efficient;Rise of programming languages;C Standard Library
Depth-First Search;"Late 19th century (Tr≈Ωmaux)
";O(V + E);O(V);Graph traversals;Space-efficient, finding all reachable nodes;Growth of graph theory and networks;ARPANET
Breadth-First Search;1945 (Zuse);O(V + E);O(V);Graph traversals;Shortest path in unweighted graphs;;
Bellman-Ford Algorithm;1958 (Bellman, Ford);O(V E);O(V) ;Shortest paths with negative weights;Handles negative weights;Network routing protocols;Cisco routers
Dijkstra's Algorithm;1959 (Dijkstra);"Best case O(E + V log V),
Worst case O(V_)";O(V) ;Shortest path in graphs;Foundation for network routing, GPS systems;Rise of networked computing;Google Maps
A* Algorithm;1968 (Hart, Nilsson, Raphael);"Best case O(E + V log V),
Worst case O(V_)";O(V) ;Pathfinding and graph traversal;Efficient, optimal for real-world scenarios;Video game development;Games on Commodore 64
Hash Tables;1953;;;Efficient data retrieval;Fast access, key-value storage;Object-oriented programming, large-scale data processing;Java's HashMap class
Binary Trees;1950s;;;Hierarchical data representation;Foundation for complex structures;Database and file systems;Hierarchical databases
Binary Search Trees (BST);1960s;;;Efficient data retrieval;Balanced search time;Database management systems;SQL databases
Hashing (MD5, SHA-1, SHA-256);1990s-2000s;;;Data integrity, security;Ensures data integrity;Digital security needs;Secure web transactions (SSL/TSL)
Quantum Computing;1980s;;;Solving complex problems;Exponentially faster for certain problems;Theoretical foundation of quantum computing research;IBM Quantum Experience, Google Quantum AI Lab
AI and Machine Learning;1956 - 1959;;;Efficient processing and learning;Enhanced performance in AI tasks;Growth of AI and machine learning;TensorFlow, PyTorch
Big Data;1990s;;;Handling large data sets;Efficient processing of big data;Rise of big data and cloud computing;Apache Hadoop, Spark
Distributed Systems and Blockchain;2000s;;;Cryptocurrency, smart contracts;Enhanced security, transparency;Blockchain and distributed ledger technology;Ethereum, Hyperledger
